import unittest
from math_quiz import function_A, function_B, function_C


class TestMathGame(unittest.TestCase):

    def test_function_A(self):
        """
        Test if random numbers generated by function_A are within the specified range.
        """
        min_val = 1
        max_val = 10
        for _ in range(1000):
            rand_num = function_A(min_val, max_val)
            self.assertTrue(min_val <= rand_num <= max_val)

    def test_function_B(self):
        """
        Test if function_B returns a valid arithmetic operator.
        """
        valid_operators = {'+', '-', '*'}
        for _ in range(1000):
            rand_operator = function_B()
            self.assertIn(rand_operator, valid_operators)

    def test_function_C(self):
        """
        Test the correctness of function_C for various scenarios.
        """
        test_cases = [
            (5, 2, '+', '5 + 2', 7),
            (3, 4, '*', '3 * 4', 12),
            (8, 2, '-', '8 - 2', 6),
            # Add more test cases
        ]

        for num1, num2, operator, expected_problem, expected_answer in test_cases:
            problem, answer = function_C(num1, num2, operator)

            # Check if the generated problem matches the expected problem
            self.assertEqual(problem, expected_problem)

            # Check if the calculated answer matches the expected answer
            self.assertEqual(answer, expected_answer)

if __name__ == "__main__":
    unittest.main()
